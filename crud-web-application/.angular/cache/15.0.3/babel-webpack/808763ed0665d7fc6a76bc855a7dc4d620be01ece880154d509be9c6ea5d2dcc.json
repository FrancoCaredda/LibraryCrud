{"ast":null,"code":"import { Book } from 'src/app/core/model/book';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/core/services/data-service.service\";\nexport class UpdatePageComponent {\n  constructor(service) {\n    this.service = service;\n    this.oldTitle = \"\";\n    this.title = \"\";\n    this.count = 0;\n  }\n  onOldTitleChange(e) {\n    this.oldTitle = e.target.value;\n  }\n  onTitleChange(e) {\n    this.title = e.target.value;\n  }\n  onCountChange(e) {\n    this.count = e.target.value;\n  }\n  onSubmit(e) {\n    e.preventDefault();\n    this.service.updateData(this.oldTitle, new Book(this.title, this.count)).subscribe(k => alert(\"Success!\"), error => alert(\"Can't insert the data\"));\n  }\n}\nUpdatePageComponent.ɵfac = function UpdatePageComponent_Factory(t) {\n  return new (t || UpdatePageComponent)(i0.ɵɵdirectiveInject(i1.DataService));\n};\nUpdatePageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UpdatePageComponent,\n  selectors: [[\"app-update-page\"]],\n  decls: 19,\n  vars: 0,\n  consts: [[2, \"margin-top\", \"10px\"], [1, \"form\", 2, \"margin-top\", \"10px\"], [1, \"mb-3\"], [\"for\", \"data0\", 1, \"form-label\"], [\"id\", \"data0\", \"placeholder\", \"Enter old title\", 1, \"form-control\"], [\"id\", \"data0\", \"placeholder\", \"Enter data\", 1, \"form-control\"], [\"for\", \"data1\", 1, \"form-label\"], [\"id\", \"data1\", \"placeholder\", \"Enter data\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n  template: function UpdatePageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h3\", 0);\n      i0.ɵɵtext(1, \"Update page\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(2, \"hr\");\n      i0.ɵɵelementStart(3, \"form\", 1)(4, \"div\", 2)(5, \"label\", 3);\n      i0.ɵɵtext(6, \"Old title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 3);\n      i0.ɵɵtext(10, \"Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 2)(13, \"label\", 6);\n      i0.ɵɵtext(14, \"Count\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 2)(17, \"button\", 8);\n      i0.ɵɵtext(18, \"Update\");\n      i0.ɵɵelementEnd()()();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,IAAI,QAAQ,yBAAyB;;;AAQ9C,OAAM,MAAOC,mBAAmB;EAK9BC,YAA2BC,OAAoB;IAApB,YAAO,GAAPA,OAAO;IAJ3B,aAAQ,GAAW,EAAE;IACrB,UAAK,GAAW,EAAE;IAClB,UAAK,GAAQ,CAAC;EAIrB;EAEOC,gBAAgB,CAACC,CAAQ;IAC9B,IAAI,CAACC,QAAQ,GAAsBD,CAAC,CAACE,MAAO,CAACC,KAAK;EACpD;EAEOC,aAAa,CAACJ,CAAQ;IAC3B,IAAI,CAACK,KAAK,GAAsBL,CAAC,CAACE,MAAO,CAACC,KAAK;EACjD;EAEOG,aAAa,CAACN,CAAQ;IAC3B,IAAI,CAACO,KAAK,GAAsBP,CAAC,CAACE,MAAO,CAACC,KAAK;EACjD;EAEOK,QAAQ,CAACR,CAAQ;IACtBA,CAAC,CAACS,cAAc,EAAE;IAClB,IAAI,CAACX,OAAO,CAACY,UAAU,CAAC,IAAI,CAACT,QAAQ,EAAE,IAAIN,IAAI,CAAC,IAAI,CAACU,KAAK,EAAE,IAAI,CAACE,KAAK,CAAC,CAAC,CAACI,SAAS,CAC/EC,CAAC,IAAKC,KAAK,CAAC,UAAU,CAAC,EACvBC,KAAK,IAAKD,KAAK,CAAC,uBAAuB,CAAC,CAC1C;EACH;;AA3BWjB,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAAmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVhCC,6BAA8B;MAAAA,2BAAW;MAAAA,iBAAK;MAC9CA,qBAAI;MACJA,+BAA6C;MAECA,yBAAS;MAAAA,iBAAQ;MACvDA,2BAAqE;MACzEA,iBAAM;MACNA,8BAAkB;MACwBA,sBAAK;MAAAA,iBAAQ;MACnDA,4BAAgE;MACpEA,iBAAM;MACNA,+BAAkB;MACwBA,sBAAK;MAAAA,iBAAQ;MACnDA,4BAAgE;MACpEA,iBAAM;MACNA,+BAAkB;MACgCA,uBAAM;MAAAA,iBAAS","names":["Book","UpdatePageComponent","constructor","service","onOldTitleChange","e","oldTitle","target","value","onTitleChange","title","onCountChange","count","onSubmit","preventDefault","updateData","subscribe","k","alert","error","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["D:\\Projects\\CRUD-template\\crud-web-application\\src\\app\\components\\update-page\\update-page.component.ts","D:\\Projects\\CRUD-template\\crud-web-application\\src\\app\\components\\update-page\\update-page.component.html"],"sourcesContent":["import { Component } from '@angular/core';\n\nimport { Book } from 'src/app/core/model/book';\nimport { DataService } from 'src/app/core/services/data-service.service';\n\n@Component({\n  selector: 'app-update-page',\n  templateUrl: './update-page.component.html',\n  styleUrls: ['./update-page.component.css']\n})\nexport class UpdatePageComponent {\n  public oldTitle: string = \"\";\n  public title: string = \"\";\n  public count: any = 0;\n\n  public constructor(private service: DataService) {\n\n  }\n\n  public onOldTitleChange(e: Event) {\n    this.oldTitle = (<HTMLInputElement>e.target).value;\n  }\n\n  public onTitleChange(e: Event) {\n    this.title = (<HTMLInputElement>e.target).value;\n  }\n\n  public onCountChange(e: Event) { \n    this.count = (<HTMLInputElement>e.target).value;\n  }\n\n  public onSubmit(e: Event) {\n    e.preventDefault();\n    this.service.updateData(this.oldTitle, new Book(this.title, this.count)).subscribe(\n      (k) => alert(\"Success!\"),\n      (error) => alert(\"Can't insert the data\")\n    );\n  }\n}\n","<h3 style=\"margin-top: 10px;\">Update page</h3>\n<hr>\n<form class=\"form\" style=\"margin-top: 10px;\">\n    <div class=\"mb-3\">\n        <label for=\"data0\" class=\"form-label\">Old title</label>\n        <input class=\"form-control\" id=\"data0\" placeholder=\"Enter old title\">\n    </div>\n    <div class=\"mb-3\">\n        <label for=\"data0\" class=\"form-label\">Title</label>\n        <input class=\"form-control\" id=\"data0\" placeholder=\"Enter data\">\n    </div>\n    <div class=\"mb-3\">\n        <label for=\"data1\" class=\"form-label\">Count</label>\n        <input class=\"form-control\" id=\"data1\" placeholder=\"Enter data\">\n    </div>\n    <div class=\"mb-3\">\n        <button type=\"submit\" class=\"btn btn-primary\">Update</button>\n    </div>\n</form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}