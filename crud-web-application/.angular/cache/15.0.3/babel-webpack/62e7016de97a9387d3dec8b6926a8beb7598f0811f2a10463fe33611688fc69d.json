{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Book } from 'src/app/core/model/book';\n//TODO: Implement \nlet GetPageComponent = class GetPageComponent {\n  constructor(service) {\n    this.service = service;\n    this.data = [];\n    this.bookName = \"\";\n  }\n  ngOnInit() {\n    this.service.getData().subscribe(data => Object.keys(data).map(key => data[key]).map(book => this.data.push(new Book(book.title, book.count))), error => alert(\"Can\\'t read books from server!\"));\n  }\n  updateBookCount(delta) {\n    let book = this.data.find(b => {\n      return b.getTitle() == this.bookName;\n    });\n    if (book != null && book.getCount() != 0) {\n      let count = parseInt(book.getCount().toString()) + delta;\n      this.service.updateData(book.getTitle(), new Book(book.getTitle(), count)).subscribe(e => alert(\"Success\"), error => alert(\"Can\\'t update the data!\"));\n    } else {\n      alert(\"This book does not exist in the table\");\n    }\n  }\n  getBook(e) {\n    console.log(this.bookName);\n    this.updateBookCount(-1);\n    window.location.reload();\n  }\n  returnBook(e) {\n    this.updateBookCount(1);\n    window.location.reload();\n  }\n};\nGetPageComponent = __decorate([Component({\n  selector: 'app-get-page',\n  templateUrl: './get-page.component.html',\n  styleUrls: ['./get-page.component.css']\n})], GetPageComponent);\nexport { GetPageComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,IAAI,QAAQ,yBAAyB;AAG9C;AAMO,IAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAI3BC,YAAoBC,OAAoB;IAApB,YAAO,GAAPA,OAAO;IAHpB,SAAI,GAAgB,EAAE;IACtB,aAAQ,GAAW,EAAE;EAEe;EAE3CC,QAAQ;IACN,IAAI,CAACD,OAAO,CAACE,OAAO,EAAE,CAACC,SAAS,CAC7BC,IAAS,IAAKC,MAAM,CAACC,IAAI,CAACF,IAAI,CAAC,CAACG,GAAG,CAAEC,GAAG,IAAKJ,IAAI,CAACI,GAAG,CAAC,CAAC,CAACD,GAAG,CAAEE,IAAI,IAAK,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,IAAIb,IAAI,CAACY,IAAI,CAACE,KAAK,EAAEF,IAAI,CAACG,KAAK,CAAC,CAAC,CAAC,EACvHC,KAAK,IAAKC,KAAK,CAAC,gCAAgC,CAAC,CACnD;EACH;EAEQC,eAAe,CAACC,KAAU;IAChC,IAAIP,IAAI,GAAG,IAAI,CAACL,IAAI,CAACa,IAAI,CAAEC,CAAC,IAAI;MAAG,OAAOA,CAAC,CAACC,QAAQ,EAAE,IAAI,IAAI,CAACC,QAAQ;IAAC,CAAC,CAAC;IAC1E,IAAIX,IAAI,IAAI,IAAI,IAAIA,IAAI,CAACY,QAAQ,EAAE,IAAI,CAAC,EAAE;MACxC,IAAIT,KAAK,GAAGU,QAAQ,CAACb,IAAI,CAACY,QAAQ,EAAE,CAACE,QAAQ,EAAE,CAAC,GAAGP,KAAK;MACxD,IAAI,CAAChB,OAAO,CAACwB,UAAU,CAACf,IAAI,CAACU,QAAQ,EAAE,EAAE,IAAItB,IAAI,CAACY,IAAI,CAACU,QAAQ,EAAE,EAAEP,KAAK,CAAC,CAAC,CAACT,SAAS,CACjFsB,CAAC,IAAKX,KAAK,CAAC,SAAS,CAAC,EACtBD,KAAK,IAAKC,KAAK,CAAC,yBAAyB,CAAC,CAC5C;KACF,MAAM;MACLA,KAAK,CAAC,uCAAuC,CAAC;;EAElD;EAEOY,OAAO,CAACD,CAAQ;IACrBE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACR,QAAQ,CAAC;IAC1B,IAAI,CAACL,eAAe,CAAC,CAAC,CAAC,CAAC;IACxBc,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;EAC1B;EAEOC,UAAU,CAACP,CAAQ;IACxB,IAAI,CAACV,eAAe,CAAC,CAAC,CAAC;IACvBc,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;EAC1B;CACD;AApCYjC,gBAAgB,eAL5BF,SAAS,CAAC;EACTqC,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,GACWrC,gBAAgB,CAoC5B;SApCYA,gBAAgB","names":["Component","Book","GetPageComponent","constructor","service","ngOnInit","getData","subscribe","data","Object","keys","map","key","book","push","title","count","error","alert","updateBookCount","delta","find","b","getTitle","bookName","getCount","parseInt","toString","updateData","e","getBook","console","log","window","location","reload","returnBook","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\Projects\\CRUD-template\\crud-web-application\\src\\app\\components\\get-page\\get-page.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Book } from 'src/app/core/model/book';\nimport { DataService } from 'src/app/core/services/data-service.service';\n\n//TODO: Implement \n@Component({\n  selector: 'app-get-page',\n  templateUrl: './get-page.component.html',\n  styleUrls: ['./get-page.component.css']\n})\nexport class GetPageComponent implements OnInit {\n  public data: Array<Book> = [];\n  public bookName: string = \"\";\n\n  constructor(private service: DataService) {}\n\n  ngOnInit(): void {\n    this.service.getData().subscribe(\n      (data: any) => Object.keys(data).map((key) => data[key]).map((book) => this.data.push(new Book(book.title, book.count))),\n      (error) => alert(\"Can\\'t read books from server!\")\n    );  \n  }\n\n  private updateBookCount(delta: any): void {\n    let book = this.data.find((b) => { return b.getTitle() == this.bookName });\n    if (book != null && book.getCount() != 0) {\n      let count = parseInt(book.getCount().toString()) + delta;\n      this.service.updateData(book.getTitle(), new Book(book.getTitle(), count)).subscribe(\n        (e) => alert(\"Success\"),\n        (error) => alert(\"Can\\'t update the data!\")\n      );\n    } else {\n      alert(\"This book does not exist in the table\");\n    }\n  }\n\n  public getBook(e: Event) {\n    console.log(this.bookName);\n    this.updateBookCount(-1);\n    window.location.reload();\n  }\n\n  public returnBook(e: Event) {\n    this.updateBookCount(1);\n    window.location.reload();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}